{"version":3,"sources":["../node_modules/peerjs/dist sync","App.tsx","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","App","useState","peerId","setPeerId","pingMS","setPingMS","videoRef","useRef","globalConn","setGlobalCoon","init","a","peer","Peer","on","conn","console","log","data","type","moment","diff","dt","setTimeout","send","toISOString","call","answer","stream","current","srcObject","err","useEffect","className","style","position","backgroundColor","zIndex","autoPlay","muted","ref","onPause","play","onLoad","height","width","onMouseMove","key","x","movementX","y","movementY","onKeyDown","onKeyUp","onMouseDown","button","onMouseUp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iGAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,I,qLC8FVC,MAjGf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,OAEeF,mBAAS,GAFxB,mBAENG,EAFM,KAEEC,EAFF,KAGPC,EAAWC,iBAAyB,MAH7B,EAIuBN,mBAClC,MALW,mBAINO,EAJM,KAIMC,EAJN,KAQPC,EAAI,uCAAG,4BAAAC,EAAA,uDACLC,EAAO,IAAIC,IAAK,yCACjBC,GAAG,QAAQ,SAAUf,GACxBI,EAAUJ,GACVa,EAAKE,GAAG,cAAc,SAAUC,GAC9BC,QAAQC,IAAI,cACZR,EAAcM,GACdA,EAAKD,GAAG,QAAQ,SAAUI,GACxB,OAAQA,EAAKC,MACX,IAAK,OACL,QACEd,EAAUe,MAASC,KAAKH,EAAKI,GAAI,iBACjCC,YAAW,WACTR,EAAKS,KAAK,CAAEF,GAAIF,MAASK,cAAeN,KAAM,WAC7C,SAMTJ,EAAKS,KAAK,CAAEF,GAAIF,MAASK,mBAG3Bb,EAAKE,GAAG,QAAQ,SAAUY,GAExBA,EAAKC,SACLD,EAAKZ,GAAG,UAAU,SAAUc,GACtBtB,EAASuB,UAASvB,EAASuB,QAAQC,UAAYF,SAIvDhB,EAAKE,GAAG,SAAS,SAAUiB,GACzBf,QAAQC,IAAIc,SAhCL,2CAAH,qDAwCV,OAHAC,qBAAU,WACRtB,MACC,IAED,sBAAKuB,UAAU,MAAf,UACE,sBACEC,MAAO,CAAEC,SAAU,WAAYC,gBAAiB,QAASC,OAAQ,GADnE,UAGE,8CAAenC,KACf,4CAAaE,KACb,sCAGF,uBACEkC,UAAQ,EAERC,OAAK,EACLC,IAAKlC,EACLmC,QAAS,WACHnC,EAASuB,SAASvB,EAASuB,QAAQa,QAEzCC,OAAQ,WACFrC,EAASuB,SAASvB,EAASuB,QAAQa,QAEzCR,MAAO,CAAEU,OAAQ,OAAQC,MAAO,QAChCC,YAAa,SAACtD,GACRgB,GACFA,EAAWgB,KAAK,CACdL,KAAM,YACN4B,IAAK,CACHC,EAAGxD,EAAEyD,UACLC,EAAG1D,EAAE2D,cAIbC,UAAW,SAAC5D,GACNgB,GAAYA,EAAWgB,KAAK,CAAEL,KAAM,UAAW4B,IAAKvD,EAAEuD,OAE5DM,QAAS,SAAC7D,GACJgB,GAAYA,EAAWgB,KAAK,CAAEL,KAAM,QAAS4B,IAAKvD,EAAEuD,OAE1DO,YAAa,SAAC9D,GACRgB,GAAYA,EAAWgB,KAAK,CAAEL,KAAM,YAAa4B,IAAKvD,EAAE+D,UAE9DC,UAAW,SAAChE,GACNgB,GAAYA,EAAWgB,KAAK,CAAEL,KAAM,UAAW4B,IAAKvD,EAAE+D,gBCjFrDE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8b37f745.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 15;","import React, { useEffect, useRef, useState } from \"react\";\nimport Peer from \"peerjs\";\nimport moment from \"moment\";\nimport \"./App.css\";\n\nfunction App() {\n  const [peerId, setPeerId] = useState(\"\");\n  const [pingMS, setPingMS] = useState(0);\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [globalConn, setGlobalCoon] = useState<Peer.DataConnection | null>(\n    null\n  );\n\n  const init = async () => {\n    const peer = new Peer(\"f5e0f2a2-19ed-42bd-8b70-2c033eacc9c6\");\n    peer.on(\"open\", function (id) {\n      setPeerId(id);\n      peer.on(\"connection\", function (conn) {\n        console.log(\"conectouuu\");\n        setGlobalCoon(conn);\n        conn.on(\"data\", function (data) {\n          switch (data.type) {\n            case \"ping\":\n            default:\n              setPingMS(moment().diff(data.dt, \"milliseconds\"));\n              setTimeout(() => {\n                conn.send({ dt: moment().toISOString(), type: \"ping\" });\n              }, 1000);\n              break;\n          }\n        });\n\n        // Send messages\n        conn.send({ dt: moment().toISOString() });\n      });\n\n      peer.on(\"call\", function (call) {\n        // Answer the call, providing our mediaStream\n        call.answer();\n        call.on(\"stream\", function (stream) {\n          if (videoRef.current) videoRef.current.srcObject = stream;\n        });\n      });\n\n      peer.on(\"error\", function (err) {\n        console.log(err);\n      });\n    });\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n  return (\n    <div className=\"App\">\n      <div\n        style={{ position: \"absolute\", backgroundColor: \"white\", zIndex: 2 }}\n      >\n        <p>{`peerId: ${peerId}`}</p>\n        <p>{`ping: ${pingMS}`}</p>\n        <p>v1</p>\n      </div>\n\n      <video\n        autoPlay\n        // ver como resolver o muted\n        muted\n        ref={videoRef}\n        onPause={() => {\n          if (videoRef.current) videoRef.current.play();\n        }}\n        onLoad={() => {\n          if (videoRef.current) videoRef.current.play();\n        }}\n        style={{ height: \"100%\", width: \"100%\" }}\n        onMouseMove={(e) => {\n          if (globalConn)\n            globalConn.send({\n              type: \"mouseMove\",\n              key: {\n                x: e.movementX,\n                y: e.movementY,\n              },\n            });\n        }}\n        onKeyDown={(e) => {\n          if (globalConn) globalConn.send({ type: \"keyDown\", key: e.key });\n        }}\n        onKeyUp={(e) => {\n          if (globalConn) globalConn.send({ type: \"keyUp\", key: e.key });\n        }}\n        onMouseDown={(e) => {\n          if (globalConn) globalConn.send({ type: \"mouseDown\", key: e.button });\n        }}\n        onMouseUp={(e) => {\n          if (globalConn) globalConn.send({ type: \"mouseUp\", key: e.button });\n        }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}